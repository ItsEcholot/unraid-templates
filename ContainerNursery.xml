<?xml version="1.0"?>
<Container version="2">
  <Name>ContainerNursery</Name>
  <Repository>ghcr.io/itsecholot/containernursery:latest</Repository>
  <Registry>https://github.com/ItsEcholot/ContainerNursery/pkgs/container/containernursery</Registry>
  <Network>bridge</Network>
  <MyIP/>
  <Shell>sh</Shell>
  <Privileged>false</Privileged>
  <Support/>
  <Project>https://github.com/ItsEcholot/ContainerNursery</Project>
  <Overview>Puts Docker Containers to sleep and wakes them back up when they're needed.&#xD;
&#xD;
Written in Node.js, this application acts as a HTTP reverse proxy and stops Docker containers which haven't been accessed recently and starts them again when a new request comes in. ContainerNursery also makes sure there are no more active WebSocket connections before stopping the container.&#xD;
&#xD;
To improve the user experience a loading page is presented, which automatically reloads when the containers webserver is ready.</Overview>
  <Category>Productivity: Network:Proxy</Category>
  <WebUI/>
  <TemplateURL/>
  <Icon>https://raw.githubusercontent.com/ItsEcholot/ContainerNursery/main/logo512.png</Icon>
  <ExtraParams/>
  <PostArgs/>
  <CPUset/>
  <DateInstalled>1631109766</DateInstalled>
  <DonateText/>
  <DonateLink/>
  <Description>Puts Docker Containers to sleep and wakes them back up when they're needed.&#xD;
&#xD;
Written in Node.js, this application acts as a HTTP reverse proxy and stops Docker containers which haven't been accessed recently and starts them again when a new request comes in. ContainerNursery also makes sure there are no more active WebSocket connections before stopping the container.&#xD;
&#xD;
To improve the user experience a loading page is presented, which automatically reloads when the containers webserver is ready.</Description>
  <Networking>
    <Mode>bridge</Mode>
    <Publish>
      <Port>
        <HostPort>9080</HostPort>
        <ContainerPort>80</ContainerPort>
        <Protocol>tcp</Protocol>
      </Port>
    </Publish>
  </Networking>
  <Data>
    <Volume>
      <HostDir>/mnt/user/appdata/ContainerNursery/config</HostDir>
      <ContainerDir>/usr/src/app/config</ContainerDir>
      <Mode>rw</Mode>
    </Volume>
    <Volume>
      <HostDir>/var/run/docker.sock</HostDir>
      <ContainerDir>/var/run/docker.sock</ContainerDir>
      <Mode>rw</Mode>
    </Volume>
  </Data>
  <Environment/>
  <Labels/>
  <Config Name="Config directory" Target="/usr/src/app/config" Default="/mnt/user/appdata/ContainerNursery/config" Mode="rw" Description="Where the config.yml file should be stored." Type="Path" Display="always" Required="false" Mask="false">/mnt/user/appdata/ContainerNursery/config</Config>
  <Config Name="Docker Socket" Target="/var/run/docker.sock" Default="/var/run/docker.sock" Mode="rw" Description="Should point to /var/run/docker.sock to be able to control the docker instance." Type="Path" Display="always" Required="false" Mask="false">/var/run/docker.sock</Config>
  <Config Name="Listening Port" Target="80" Default="9080" Mode="tcp" Description="Listens on this Port for HTTP traffic to be reverse proxied." Type="Port" Display="always" Required="false" Mask="false">9080</Config>
</Container>